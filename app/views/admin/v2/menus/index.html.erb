<header class="bg-yellow-500 text-white shadow-lg">
  <div class="container px-4 py-4 flex justify-between items-center">
    <h1 class="text-xl font-bold">かけはし糖尿病・甲状腺クリニック 管理画面</h1>
    <%= button_to "ログアウト", destroy_administrator_session_path, method: :delete, class: "bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded transition duration-200" %>
  </div>
</header>

<!-- Navigation Bar -->
<nav class="bg-gray-800 shadow">
  <div class="container px-4">
    <ul class="flex space-x-1">
      <li>
        <%= link_to admin_v2_appointments_path, class: "flex items-center space-x-2 text-gray-300 hover:text-white hover:bg-gray-700 px-4 py-3 transition" do %>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
          </svg>
          <span>予約一覧</span>
        <% end %>
      </li>
      <li>
        <%= link_to admin_v2_menus_path, class: "flex items-center space-x-2 text-white bg-gray-700 px-4 py-3 transition" do %>
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          <span>予約枠管理</span>
        <% end %>
      </li>
    </ul>
  </div>
</nav>

<!-- Main Content -->
<div class="p-6 bg-gray-50 min-h-screen">
    <% if flash[:notice] %>
      <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4">
        <%= flash[:notice] %>
      </div>
    <% end %>
    <% if flash[:alert] %>
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
        <%= flash[:alert] %>
      </div>
    <% end %>

    <h1 class="text-xl font-bold mb-6">予約枠管理</h1>

    <!-- Week Navigation -->
    <div class="bg-white rounded-lg shadow mb-6 p-4">
      <div class="flex justify-between items-center">
        <%= link_to admin_v2_menus_path(date: @week_start - 7.days), class: "text-yellow-600 hover:text-yellow-800 font-medium flex items-center" do %>
          <svg class="w-5 h-5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          前の週
        <% end %>
        
        <h2 class="text-xl font-semibold">
          <%= @week_start.strftime("%Y/%m/%d") %> 〜 <%= @week_end.strftime("%Y/%m/%d") %>
        </h2>
        
        <%= link_to admin_v2_menus_path(date: @week_start + 7.days), class: "text-yellow-600 hover:text-yellow-800 font-medium flex items-center" do %>
          次の週
          <svg class="w-5 h-5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        <% end %>
      </div>
    </div>

    <!-- Calendar Grid -->
    <div class="grid grid-cols-7 gap-4">
      <% 7.times do |i| %>
        <% current_date = @week_start + i.days %>
        <% day_menus = @menus_by_day[current_date] || [] %>
        
        <div class="bg-white rounded-lg shadow">
          <!-- Day Header -->
          <div class="px-4 py-3 border-b bg-gray-50">
            <div class="text-center">
              <div class="text-lg font-bold">
                <%= current_date.strftime("%m/%d") %>
              </div>
              <div class="text-sm text-gray-600">
                <%= %w[日 月 火 水 木 金 土][current_date.wday] %>
              </div>
              <button onclick="toggleDeleteMode('<%= current_date %>')" class="text-xs text-red-500 mt-1 hover:underline cursor-pointer">
                全削除
              </button>
            </div>
          </div>
          
          <!-- Time Slots -->
          <div class="p-2 space-y-2">
            <%
              # 営業時間のスロットを30分ごとに生成
              time_slots = []
              
              # 午前の診療時間: 9:00-12:30
              current_time = Time.parse("09:00")
              end_morning = Time.parse("12:00")
              while current_time <= end_morning
                time_slots << current_time.strftime("%H:%M")
                current_time += 30.minutes
              end
              
              # 昼休憩表示用
              time_slots << "LUNCH_BREAK"
              
              # 午後の診療時間: 14:30-18:00
              current_time = Time.parse("14:30")
              end_afternoon = Time.parse("17:30")
              while current_time <= end_afternoon
                time_slots << current_time.strftime("%H:%M")
                current_time += 30.minutes
              end
            %>
            
            <% time_slots.each do |time_slot| %>
              <% if time_slot == "LUNCH_BREAK" %>
                <!-- 昼休憩スロット -->
                <div class="p-2 bg-gray-50 border border-gray-200 rounded">
                  <div class="text-xs text-gray-500 text-center">12:30 - 14:00 昼休憩</div>
                </div>
              <% else %>
                <% 
                  # この時間のメニューを探す
                  slot_menu = day_menus.find { |m| m.start_at.strftime("%H:%M") == time_slot }
                %>
                <% if slot_menu %>
                  <% if slot_menu.appointment.present? %>
                    <% appointment = slot_menu.appointment.first %>
                    <div class="p-2 bg-yellow-100 border border-yellow-300 rounded hover:bg-yellow-200 cursor-pointer" 
                         onclick="openAppointmentDrawer('<%= appointment.id %>')"
                         data-appointment-id="<%= appointment.id %>"
                         data-appointment='<%= appointment.to_json(include: :menu) %>'>
                      <div class="text-sm font-medium text-yellow-800">
                        内科 <%= time_slot %>
                        <svg class="inline w-4 h-4 text-yellow-600 ml-1" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"></path>
                        </svg>
                      </div>
                    </div>
                  <% else %>
                    <div class="p-2 bg-gray-100 hover:bg-gray-200 rounded flex justify-between items-center group">
                      <div class="text-sm">
                        内科 <%= time_slot %>
                      </div>
                      <%= button_to "×", admin_v2_menu_path(slot_menu, date: @week_start), method: :delete, 
                          class: "text-red-500 hover:text-red-700 font-bold text-lg opacity-0 group-hover:opacity-100 transition cursor-pointer",
                          data: { confirm: "この予約枠を削除しますか？" } %>
                    </div>
                  <% end %>
                <% else %>
                  <!-- 予約枠がない時間帯 -->
                  <div class="p-2 border border-gray-200 rounded hover:bg-gray-50 flex justify-center items-center">
                    <button onclick="createSlotDirectly('<%= current_date %>', '<%= time_slot %>')" 
                            class="text-gray-400 hover:text-gray-600 transition cursor-pointer">
                      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                      </svg>
                    </button>
                    <div class="text-sm">
                      内科 <%= time_slot %>
                    </div>
                  </div>
                <% end %>
              <% end %>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
</div>


<!-- Appointment Drawer -->
<div id="appointment-drawer" class="fixed right-0 top-0 h-full w-160 bg-white shadow-2xl transform translate-x-full transition-transform duration-300 ease-in-out z-50 overflow-y-auto">
  <!-- Drawer header -->
  <div class="sticky top-0 bg-white border-b border-gray-200 px-6 py-4">
    <div class="flex justify-between items-center">
      <h2 class="text-xl font-bold">予約詳細</h2>
      <button onclick="closeAppointmentDrawer()" class="text-gray-500 hover:text-gray-700 cursor-pointer">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>
  
  <!-- Drawer content -->
  <div id="drawer-content" class="p-6">
    <!-- Content will be dynamically inserted here -->
  </div>
</div>

<!-- Overlay -->
<div id="drawer-overlay" class="fixed inset-0 bg-transparent bg-opacity-50 z-40 hidden" onclick="closeAppointmentDrawer()"></div>

<script>
  let currentDate = null;
  let currentAppointment = null;

  // 直接スロットを作成する関数
  function createSlotDirectly(date, time) {
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = '<%= admin_v2_menus_path %>';
    
    const tokenInput = document.createElement('input');
    tokenInput.type = 'hidden';
    tokenInput.name = 'authenticity_token';
    tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
    
    const startAtInput = document.createElement('input');
    startAtInput.type = 'hidden';
    startAtInput.name = 'menu[start_at]';
    startAtInput.value = `${date} ${time}:00`;
    
    const departmentInput = document.createElement('input');
    departmentInput.type = 'hidden';
    departmentInput.name = 'menu[department]';
    departmentInput.value = '内科';  // 自動で内科に設定
    
    form.appendChild(tokenInput);
    form.appendChild(startAtInput);
    form.appendChild(departmentInput);
    
    document.body.appendChild(form);
    form.submit();
  }

  function toggleDeleteMode(date) {
    if (confirm(`${date}の予約のない枠をすべて削除しますか？`)) {
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = '<%= destroy_all_admin_v2_menus_path %>';
      
      const methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      methodInput.value = 'delete';
      
      const tokenInput = document.createElement('input');
      tokenInput.type = 'hidden';
      tokenInput.name = 'authenticity_token';
      tokenInput.value = document.querySelector('meta[name="csrf-token"]').content;
      
      const minDateInput = document.createElement('input');
      minDateInput.type = 'hidden';
      minDateInput.name = 'min_date';
      minDateInput.value = date;
      
      const maxDateInput = document.createElement('input');
      maxDateInput.type = 'hidden';
      maxDateInput.name = 'max_date';
      maxDateInput.value = date;
      
      const dateInput = document.createElement('input');
      dateInput.type = 'hidden';
      dateInput.name = 'date';
      dateInput.value = '<%= @week_start %>';
      
      form.appendChild(methodInput);
      form.appendChild(tokenInput);
      form.appendChild(minDateInput);
      form.appendChild(maxDateInput);
      form.appendChild(dateInput);
      
      document.body.appendChild(form);
      form.submit();
    }
  }

  // Appointment Drawer Functions
  function openAppointmentDrawer(appointmentId) {
    const element = document.querySelector(`[data-appointment-id="${appointmentId}"]`);
    const appointmentData = JSON.parse(element.dataset.appointment);
    currentAppointment = appointmentData;
    
    // Update drawer content
    const drawerContent = document.getElementById('drawer-content');
    drawerContent.innerHTML = `
      <div class="space-y-6">
        <!-- Patient Information -->
        <div>
          <h3 class="text-lg font-semibold mb-3 text-gray-700">患者情報</h3>
          <div class="bg-gray-50 rounded-lg p-4 space-y-2">
            <div>
              <span class="text-gray-600">氏名: </span>
              <span class="font-medium">${appointmentData.full_name}</span>
            </div>
            <div>
              <span class="text-gray-600">フリガナ: </span>
              <span class="font-medium">${appointmentData.full_kana_name}</span>
            </div>
            <div>
              <span class="text-gray-600">生年月日: </span>
              <span class="font-medium">${formatDate(appointmentData.birthday)}</span>
            </div>
            <div>
              <span class="text-gray-600">電話番号: </span>
              <span class="font-medium">${appointmentData.phone_number}</span>
            </div>
            <div>
              <span class="text-gray-600">メールアドレス: </span>
              <span class="font-medium">${appointmentData.email}</span>
            </div>
          </div>
        </div>
        
        <!-- Appointment Information -->
        <div>
          <h3 class="text-lg font-semibold mb-3 text-gray-700">予約情報</h3>
          <div class="bg-gray-50 rounded-lg p-4 space-y-2">
            <div>
              <span class="text-gray-600">予約日時: </span>
              <span class="font-medium">${formatDateTime(appointmentData.menu.start_at)}</span>
            </div>
            <div>
              <span class="text-gray-600">診療科: </span>
              <span class="font-medium">${appointmentData.menu.department}</span>
            </div>
            <div>
              <span class="text-gray-600">診療歴: </span>
              <span class="font-medium">
                ${appointmentData.is_first_visit ? 
                  '<span class="inline-block px-2 py-1 text-xs text-white bg-blue-500 rounded">初診</span>' : 
                  '<span class="inline-block px-2 py-1 text-xs text-white bg-green-500 rounded">再診</span>'}
              </span>
            </div>
            ${!appointmentData.is_first_visit && appointmentData.clinical_number ? 
              `<div>
                <span class="text-gray-600">診察券番号: </span>
                <span class="font-medium">${appointmentData.clinical_number}</span>
              </div>` : ''}
          </div>
        </div>
        
        <!-- Consultation Details -->
        <div>
          <h3 class="text-lg font-semibold mb-3 text-gray-700">相談内容</h3>
          <div class="bg-gray-50 rounded-lg p-4">
            <p class="text-gray-800 whitespace-pre-wrap">${appointmentData.reason || '記載なし'}</p>
          </div>
        </div>
        
        <!-- Free Comment -->
        ${appointmentData.free_comment ? 
          `<div>
            <h3 class="text-lg font-semibold mb-3 text-gray-700">その他コメント</h3>
            <div class="bg-gray-50 rounded-lg p-4">
              <p class="text-gray-800 whitespace-pre-wrap">${appointmentData.free_comment}</p>
            </div>
          </div>` : ''}
        
        <!-- Metadata -->
        <div>
          <h3 class="text-lg font-semibold mb-3 text-gray-700">システム情報</h3>
          <div class="bg-gray-50 rounded-lg p-4 space-y-2">
            <div>
              <span class="text-gray-600">予約ID:</span>
              <span class="font-medium">${appointmentData.id}</span>
            </div>
            <div>
              <span class="text-gray-600">予約作成日時:</span>
              <span class="font-medium">${formatDateTime(appointmentData.created_at)}</span>
            </div>
          </div>
        </div>
        
        <!-- Delete Section -->
        <div class="pt-6 border-t border-gray-200">
          <h3 class="text-lg font-semibold mb-3 text-red-600">予約の削除</h3>
          <form action="/admin/v2/appointments/${appointmentData.id}" method="post" onsubmit="return confirmDelete(event, '${appointmentData.id}')">
            <input type="hidden" name="_method" value="delete">
            <input type="hidden" name="authenticity_token" value="${getAuthenticityToken()}">
            <div class="space-y-3">
              <div>
                <label for="delete-reason-${appointmentData.id}" class="block text-sm font-medium text-gray-700 mb-2">
                  削除理由（5文字以上）<span class="text-red-500">*</span>
                </label>
                <textarea
                  name="reason"
                  id="delete-reason-${appointmentData.id}"
                  rows="3"
                  class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                  placeholder="削除理由を入力してください"
                  oninput="validateDeleteReason('${appointmentData.id}')"
                  required
                ></textarea>
                <div id="delete-reason-error-${appointmentData.id}" class="text-red-500 text-sm mt-1 hidden">
                  削除理由は5文字以上で入力してください
                </div>
              </div>
              <button
                type="submit"
                id="delete-btn-${appointmentData.id}"
                disabled
                class="w-full bg-red-500 text-white font-semibold py-3 px-4 rounded transition duration-200 disabled:bg-gray-300 disabled:cursor-not-allowed hover:bg-red-600"
              >
                予約を削除
              </button>
            </div>
          </form>
        </div>
      </div>
    `;
    
    // Show drawer and overlay
    const drawer = document.getElementById('appointment-drawer');
    const overlay = document.getElementById('drawer-overlay');
    
    overlay.classList.remove('hidden');
    setTimeout(() => {
      drawer.classList.remove('translate-x-full');
    }, 10);
  }

  function closeAppointmentDrawer() {
    const drawer = document.getElementById('appointment-drawer');
    const overlay = document.getElementById('drawer-overlay');
    
    drawer.classList.add('translate-x-full');
    setTimeout(() => {
      overlay.classList.add('hidden');
    }, 300);
  }

  function formatDate(dateString) {
    const date = new Date(dateString);
    return `${date.getFullYear()}年${(date.getMonth() + 1).toString().padStart(2, '0')}月${date.getDate().toString().padStart(2, '0')}日`;
  }
  
  function formatDateTime(dateString) {
    const date = new Date(dateString);
    return `${date.getFullYear()}年${(date.getMonth() + 1).toString().padStart(2, '0')}月${date.getDate().toString().padStart(2, '0')}日 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
  }
  
  // Get authenticity token for Rails forms
  function getAuthenticityToken() {
    return document.querySelector('meta[name="csrf-token"]')?.content || '';
  }

  // Delete validation function
  function validateDeleteReason(appointmentId) {
    const reasonInput = document.getElementById(`delete-reason-${appointmentId}`);
    const errorDiv = document.getElementById(`delete-reason-error-${appointmentId}`);
    const deleteBtn = document.getElementById(`delete-btn-${appointmentId}`);
    
    const reason = reasonInput.value.trim();
    
    if (reason.length >= 5) {
      errorDiv.classList.add('hidden');
      deleteBtn.disabled = false;
    } else {
      errorDiv.classList.remove('hidden');
      deleteBtn.disabled = true;
    }
  }
  
  // Confirm before deleting
  function confirmDelete(event, appointmentId) {
    const reasonInput = document.getElementById(`delete-reason-${appointmentId}`);
    const reason = reasonInput.value.trim();
    
    if (reason.length < 5) {
      event.preventDefault();
      alert('削除理由は5文字以上で入力してください');
      return false;
    }
    
    if (!confirm('本当にこの予約を削除しますか？この操作は取り消せません。')) {
      event.preventDefault();
      return false;
    }
    
    return true;
  }

  // Close modal/drawer on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      closeAddSlotModal();
      closeAppointmentDrawer();
    }
  });
</script>
